name: "package"

on:
  workflow_dispatch:
  push:
    branches:
      - "master"

jobs:
  package:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
        - os: ubuntu-latest
          cc: musl-gcc
          cflags: -O2 -flto -fno-plt
          pkgext: .tar.xz
        - os: macos-latest
          cc: clang
          cflags: -O2 -flto -fno-plt
          pkgext: .tar.xz
        - os: windows-latest
          cc: gcc
          cflags: -O2 -m32
          pkgext: .zip
    runs-on: ${{matrix.os}}
    steps:
    - uses: actions/checkout@master
      with:
        fetch-depth: 0
    - name: Install musl
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: sudo apt-get update && sudo apt-get install musl-tools

    - name: Prepare with cmake
      if: ${{ matrix.os == 'windows-latest' }}
      run: cmake -S "." -B "build" -G "Visual Studio 17 2022" -A "Win32"
      
    - name: Build with cmake
      if: ${{ matrix.os == 'windows-latest' }}
      run: cmake --build build --config Release
        
    - name: Package
      shell: bash
      run: make package CC=${{matrix.cc}} CFLAGS="${{matrix.cflags}}"
      if: ${{ matrix.os != 'windows-latest' }}
      
    - name: Package (windows)
      if: ${{ matrix.os == 'windows-latest' }}
      shell: pwsh
      run: |
        $PKGDIR = "pkg"
        $PKGNAME = "nelua-windows-x86-latest"
        
        del /Q /S "${PKGDIR}/${PKGNAME}"
        mkdir "${PKGDIR}"
        mkdir "${PKGDIR}/${PKGNAME}"
        cp -r lib "${PKGDIR}/${PKGNAME}/lib"
        cp -r lualib "${PKGDIR}/${PKGNAME}/lualib"
        # ${MAKE} --no-print-directory install-version-patch PREFIX_LIB_NELUA="${PKGDIR}/${PKGNAME}"
        cp LICENSE "${PKGDIR}/${PKGNAME}/LICENSE"
        
        cp nelua.bat "${PKGDIR}/${PKGNAME}/nelua.bat"
        # ${INSTALL_EXE} nelua-lua.exe "${PKGDIR}/${PKGNAME}/nelua-dll.exe"
        cp Release/nelua-*.exe "${PKGDIR}/${PKGNAME}/"
        cp Release/nelua-*.dll "${PKGDIR}/${PKGNAME}/"
        del /Q "${PKGDIR}/${PKGNAME}.zip"
        cd ${PKGDIR}; 7z a -mm=Deflate -mx=9 "${PKGNAME}.zip" "${PKGNAME}"
    - name: Adjust variables
      shell: bash
      id: pkgvars
      run: |
        pkgfile=`ls pkg/*${{matrix.pkgext}}`
        echo "::set-output name=pkgfile::$pkgfile";
    - name: Upload pre release
      uses: ncipollo/release-action@v1
      with:
        name: Latest Nelua in development
        tag: latest
        artifacts: ${{steps.pkgvars.outputs.pkgfile}}
        token: ${{secrets.GITHUB_TOKEN}}
        prerelease: true
        allowUpdates: true
        body:
          Precompiled Nelua binary package rebuilt at every new commit in master branch.
